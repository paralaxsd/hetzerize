name: Make Release
on: 
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  publish-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.101'

      - name: Restore .NET tools
        run: dotnet tool restore
          
      - name: Get Version
        id: version
        shell: pwsh
        run: |
          $version = dotnet nbgv get-version --variable SemVer2
          echo "VERSION=$version" >> $env:GITHUB_ENV
          
      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get commits since last release
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"* %s by @%an" --reverse)
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"* %s by @%an" --reverse)
          fi
          echo "COMMITS<<EOF" >> $GITHUB_OUTPUT
          echo "## What's Changed" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 'Cache: .nuke/temp, ~/.nuget/packages'
        uses: actions/cache@v4
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj', '**/Directory.Packages.props') }}

      - name: 'Run: PublishAll'
        run: ./build.cmd PublishAll

      - name: Compress Linux Artifacts
        run: |
          mkdir -p ./release-assets
          tar -czvf "./release-assets/hetzerize-linux-${VERSION}.tar.gz" -C artifacts/linux .
          sha256sum "./release-assets/hetzerize-linux-${VERSION}.tar.gz" > "./release-assets/hetzerize-linux-${VERSION}.tar.gz.sha256"

      - name: Compress Windows Artifacts
        run: |
          zip -r "./release-assets/hetzerize-windows-${VERSION}.zip" artifacts/win
          sha256sum "./release-assets/hetzerize-windows-${VERSION}.zip" > "./release-assets/hetzerize-windows-${VERSION}.zip.sha256"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: ${{ steps.release_notes.outputs.COMMITS }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./release-assets/*
          tag_name: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}